name: PreDeployment

on:
  push:
    branches:
      - development

jobs:
  predeploy:
    if: "!contains(github.event.commits[0].message, '[skip-ci]')"
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn Cache Directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Utilize Yarn Cache Directory
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Utilize Next Cache Directory
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Check Types
        id: types
        run: yarn types

      - name: Run Lint
        if: steps.types.exit_code == 0
        id: lint
        run: yarn lint

      - name: Run Tests
        if: steps.lint.exit_code == 0
        id: tests
        run: yarn test

      - name: Run Build
        if: steps.tests.exit_code == 0
        id: build
        run: yarn build
        env:
          CONTENTFUL_BASE_URL: ${{ secrets.CONTENTFUL_BASE_URL }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_BACKGROUND_ID: ${{ secrets.CONTENTFUL_BACKGROUND_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          NEXT_PUBLIC_CLIENT: ${{ secrets.NEXT_PUBLIC_CLIENT }}
          PORT: ${{ secrets.PORT }}
