name: Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: "!contains(github.event.commits[0].message, '[skip-ci]')"
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn Cache Directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Utilize Yarn Cache Directory
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Utilize Next Cache Directory
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Create Local Build
        id: build
        run: yarn build

      - name: Deploy Build
        if: steps.build.exit_code == 0
        run: |
          echo '${{secrets.DEPLOYKEY}}' > deploy_key
          chmod 600 ./deploy_key
          rsync -chav --delete --exclude start.json --exclude='$(yarn cache dir)' \
            -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
            --exclude /deploy_key \
            --exclude /.git/ \
            --exclude /node_modules/ \
            --exclude /start.json/ \
            --exclude '$(yarn cache dir)' \
            ./ ${{env.REMOTE}}:${{secrets.DESTINATION}}

      - name: Restart Application
        run: ssh -i ./deploy_key -o 'StrictHostKeyChecking no' -v ${{env.REMOTE}} 'cd ${{secrets.DESTINATION}};/usr/bin/yarn;pm2 restart 0'
